// 

#include <Wire.h>
#include <Arduino_BMI270_BMM150.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_AHRS_Madgwick.h>

#define GRAVITY 9.80665

// AHRS 객체 생성 (Madgwick 필터 사용)
Adafruit_Madgwick ahrs;

// β 값 수동 조정 (자이로스코프의 가중치 조정)
float beta = 0.1; // 기본값은 0.1, 값을 줄이면 자이로 반응 속도가 빨라짐

// 센서 초기화 상태 플래그
bool sensorReady = false;

void setup()
{
	Serial.begin(115200);
	while (!Serial)
		;

	// BMI270 + BMM150 센서 초기화
	if (!IMU.begin())
	{
		Serial.println("BMI270 + BMM150 센서를 찾을 수 없습니다.");
		while (1)
			;
	}
	Serial.println("BMI270 + BMM150 센서가 정상적으로 초기화되었습니다.");

	// AHRS 필터 초기화
	ahrs.begin(200); // 100Hz 업데이트 주기
	ahrs.setBeta(beta); // 자이로스코프 가중치 조정

	sensorReady = true;
}

void loop()
{
	if (!sensorReady)
		return;

	float accelX, accelY, accelZ;
	float gyroX, gyroY, gyroZ;
	float magX, magY, magZ;

	// 가속도 데이터 읽기
	if (IMU.accelerationAvailable())
	{
		IMU.readAcceleration(accelX, accelY, accelZ);
	}

	// 자이로스코프 데이터 읽기
	if (IMU.gyroscopeAvailable())
	{
		IMU.readGyroscope(gyroX, gyroY, gyroZ);
	}

	// 자기장 데이터 읽기
	if (IMU.magneticFieldAvailable())
	{
		IMU.readMagneticField(magX, magY, magZ);
	}

	// AHRS 필터 업데이트 (단위: rad/s, m/s², uT)
	// Convert from mg to m/s^2 (1 g = 9.80665 m/s^2)
	accelX *= GRAVITY;
	accelY *= GRAVITY;
	accelZ *= GRAVITY;
	// Convert from dps to rad/s (1 dps = 0.0174533 rad/s)
	gyroX *= DEG_TO_RAD;
	gyroY *= DEG_TO_RAD;
	gyroZ *= DEG_TO_RAD;
	ahrs.update(gyroX, gyroY, gyroZ, accelX, accelY, accelZ, magX, magY, magZ);

	// 센싱 정보 출력 (가속도, 자이로스코프, 자기장)
	Serial.print("Accel: ");
	Serial.print(accelX);
	Serial.print(",\t");
	Serial.print(accelY);
	Serial.print(",\t");
	Serial.print(accelZ);
	Serial.print(" m/s²,\tGyro:");
	Serial.print(gyroX);
	Serial.print(",\t");
	Serial.print(gyroY);
	Serial.print(",\t");
	Serial.print(gyroZ);
	Serial.print(" rad/s,\tMag:");
	Serial.print(magX);
	Serial.print(",\t");
	Serial.print(magY);
	Serial.print(",\t");
	Serial.print(magZ);
	Serial.print(" uT\t");
	// 자세 정보 출력 (Roll, Pitch, Yaw)
	Serial.print("Roll: ");
	Serial.print(ahrs.getRoll());
	Serial.print("°, Pitch: ");
	Serial.print(ahrs.getPitch());
	Serial.print("°, Yaw: ");
	Serial.print(ahrs.getYaw());
	Serial.println("°");

	delay(5); // 100Hz 업데이트 주기 유지
}